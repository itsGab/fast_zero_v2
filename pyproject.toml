[project]
name = "fast-zero"
version = "0.1.0"
description = ""
authors = [
    {name = "gabriel",email = "you@example.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "fastapi[standard] (>=0.116.1,<0.117.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "sqlalchemy[asyncio] (>=2.0.43,<3.0.0)",
    "alembic (>=1.16.4,<2.0.0)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "pwdlib[argon2] (>=0.2.1,<0.3.0)",
    "aiosqlite (>=0.21.0,<0.22.0)"
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
taskipy = "^1.14.1"
ruff = "^0.12.7"
pytest-asyncio = "^1.1.0"
factory-boy = "^3.3.3"
freezegun = "^1.5.5"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'FAST']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format =' ruff check --fix'
format = 'ruff format'
run = 'fastapi dev fast_zero/app.py'
pre_test = 'task lint'
test = 'clear ; pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"